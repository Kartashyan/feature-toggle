{"version":3,"sources":["custom-hooks/useApi.js","custom-hooks/useFeature.js","components/AddFeatureForm.js","custom-hooks/useFetchList.js","components/FeatureCard.js","components/FeatureItem.js","pages/Admin.js","pages/User.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","useApi","initialData","useState","loading","setLoading","error","setError","response","setResponse","makeCall","callFunc","options","a","pathParam","data","json","api","get","getCall","post","postCall","delete","deleteCall","update","updateCall","fetch","method","body","JSON","stringify","useFeature","updateFeatureState","checked","name","enabled","deleteFeature","addFeature","useStyles","makeStyles","root","margin","bullet","display","transform","title","fontSize","pos","marginBottom","AddFeatureForm","refetch","onAddFeature","classes","setName","handleAddFeature","Card","className","CardContent","TextField","id","value","onChange","event","console","log","target","label","style","helperText","fullWidth","InputLabelProps","shrink","CardActions","Button","onClick","variant","color","disabled","LinearProgress","useFetchList","reload","setReload","useEffect","Date","now","FeatureCard","handleChange","handleDelete","onDelete","role","Switch","inputProps","button","FeatureItem","onRefetch","setChecked","Admin","Container","maxWidth","data-testid","map","item","key","User","Paper","elevation","App","Breadcrumbs","aria-label","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2c02b5b5.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const apiUrl = 'https://mmcq21v28g.execute-api.eu-central-1.amazonaws.com/dev/features';\n\nexport default function useApi(initialData) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [response, setResponse] = useState(initialData);\n\n  async function makeCall(callFunc, options) {\n    setLoading(true);\n\n    try {\n      const response = await callFunc(options.pathParam, options.data);\n      const json = await response.json();\n      setResponse(json);\n    } catch (err) {\n      setError(err);\n    }\n    setLoading(false);\n  }\n\n  const api = {\n    get: (pathParam) => makeCall(getCall, { pathParam }),\n    post: (data, pathParam) => makeCall(postCall, { pathParam, data }),\n    delete: (pathParam) => makeCall(deleteCall, { pathParam }),\n    update: (data, pathParam) => makeCall(updateCall, { pathParam, data }),\n  }\n\n  return { api, error, loading, response };\n}\n\n//helpers\n\nfunction updateCall(pathParam, data) {\n  return fetch(`${apiUrl}/${pathParam}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data)\n  });\n}\n\nfunction deleteCall(pathParam) {\n  return fetch(`${apiUrl}/${pathParam}`, {\n    method: \"DELETE\",\n  });\n}\n\nfunction postCall(pathParam = '', data) {\n  return fetch(`${apiUrl}/${pathParam}`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n  });\n}\n\nfunction getCall(pathParam = '') {\n  return fetch(`${apiUrl}/${pathParam}`);\n}\n","import useApi from './useApi';\n\nexport default function useFeature() {\n  const { loading, error, api } = useApi();\n\n  const updateFeatureState = (checked, name) => api.update({ enabled: checked }, name);\n\n  const deleteFeature = (name) => api.delete(name);\n\n  const addFeature = (name) => api.post({ name });\n\n  return { error, loading, updateFeatureState, deleteFeature, addFeature }\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport useFeature from '../custom-hooks/useFeature';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 400,\n    margin: 12,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function AddFeatureForm({ onAddFeature: refetch }) {\n  const classes = useStyles();\n  const [name, setName] = useState('');\n\n  const { loading, addFeature } = useFeature();\n\n  const handleChange = (event) => {\n    console.log(event.target.checked);\n    setName(event.target.value);\n  }\n\n  const handleAddFeature = async () => {\n    await addFeature(name);\n    refetch();\n    setName('');\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <TextField\n          id=\"standard-full-width\"\n          value={name}\n          onChange={handleChange}\n          label=\"Add feature\"\n          style={{ margin: 8 }}\n          helperText=\"Type a feature name\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </CardContent>\n\n      <CardActions>\n        <Button onClick={handleAddFeature} fullWidth variant=\"contained\" color=\"primary\" disabled={!name}>Add Feature</Button>\n      </CardActions>\n      {loading && <LinearProgress />}\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport useApi from './useApi';\n\nexport default function useFetchList() {\n  const {response, loading, error, api } = useApi([]);\n\n  const [reload, setReload] = useState();\n\n  useEffect(() => {\n    api.get();\n  }, [reload]);\n\n  return { response, error, loading, refetch: () => setReload(Date.now()) };\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 12,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function FeatureCard({ name, checked, loading, onChange: handleChange, onDelete: handleDelete }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <h3 role='featureName'>{name}</h3>\n      </CardContent>\n      <CardActions >\n        <Switch\n          checked={checked}\n          onChange={handleChange}\n          color=\"primary\"\n          name={name}\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </CardActions>\n      {loading && <LinearProgress />}\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport FeatureCard from './FeatureCard';\nimport useFeature from '../custom-hooks/useFeature'\n\nexport default function FeatureItem({ name, enabled, onRefetch: refetch }) {\n  const [checked, setChecked] = useState(enabled);\n  const { error, loading, updateFeatureState, deleteFeature } = useFeature();\n\n  const handleChange = async (event) => {\n    const checked = event.target.checked;\n    await updateFeatureState(checked, name);\n    setChecked(checked);\n  };\n\n  const handleDelete = async () => {\n    await deleteFeature(name);\n    refetch();\n  }\n  return (\n    <FeatureCard\n      name={name}\n      checked={checked}\n      loading={loading}\n      onChange={handleChange}\n      onDelete={handleDelete}\n    />\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AddFeatureForm from '../components/AddFeatureForm';\nimport useFetchList from '../custom-hooks/useFetchList'\nimport FeatureItem from '../components/FeatureItem';\n\nexport default function Admin() {\n  const { response, loading, error, refetch } = useFetchList();\n  return (\n    <Container maxWidth=\"sm\">\n      {loading && <LinearProgress />}\n      <h3>Features List</h3>\n      {error && <p>Something went wrong...</p>}\n      <AddFeatureForm onAddFeature={refetch} />\n      <div data-testid=\"featuresList\">\n        {response.map(item => (\n          <FeatureItem\n            name={item.name}\n            onChange={refetch}\n            enabled={item.enabled}\n            key={item.name}\n          />\n        ))}\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport useFetchList from '../custom-hooks/useFetchList'\n\nexport default function User() {\n  const { response, loading, error, refetch } = useFetchList();\n  return (\n    <Container maxWidth=\"sm\">\n      {loading && <LinearProgress />}\n      {error && <p>Something went wrong...</p>}\n      <div data-testid=\"featuresList\">\n        {response.map(item => (\n          <Paper elevation={3} key={item.name}>\n            <h4>{item.name}</h4>\n          </Paper>\n        ))}\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport AdminPage from \"./pages/Admin\";\nimport UserPage from \"./pages/User\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link to=\"/\">User page</Link>\n        <Link to=\"/admin\">Admin page</Link>\n      </Breadcrumbs>\n      <Switch>\n        <Route path=\"/admin\">\n          <AdminPage />\n        </Route>\n        <Route path=\"/\">\n          <UserPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}