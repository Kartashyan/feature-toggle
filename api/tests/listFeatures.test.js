'use strict';

// tests for getFeatures
// Generated by serverless-jest-plugin

const mod = require('../handler');
const db = require('../database');
const { resetDb } = require('./helpers');
const { features: { tableName } } = require('../config');

const jestPlugin = require('serverless-jest-plugin');
const lambdaWrapper = jestPlugin.lambdaWrapper;
const wrapped = lambdaWrapper.wrap(mod, { handler: 'listFeatures' });

describe('listFeatures', () => {
  beforeEach(() => {
    return resetDb();
  });

  it('should get all features from db and return', async () => {
    let features = [
      {
        name: 'dessert1',
        enabled: true
      },
      {
        name: 'dessert2',
        enabled: false
      },
    ];
    
    for(const feature of features) {
      await db.put({ TableName: tableName, Item: feature }).promise();
    }

    let response = await wrapped.run({});

    expect(response).toBeDefined();
    expect(response.statusCode).toEqual(200);

    const parsedFeaturesList = JSON.parse(response.body);
    expect(parsedFeaturesList).toHaveLength(features.length);
    expect(parsedFeaturesList).toContainEqual(features[0]);
    expect(parsedFeaturesList).toContainEqual(features[1]);
  });
});
